



IDR                                                            A. Grewal
Internet-Draft                                                  N. Sheth
Intended status: Standards Track                        K. Vairavakkalai
Expires: April 9, 2018                                  Juniper Networks
                                                         October 6, 2017


               BGP accept-own-nexthop community attribute
                    draft-agrewal-accept-own-nexthop

Abstract

   Allowing a Controller to re-originate Border Gateway Portocol (BGP)
   Virtual Private Network (VPN) route helps it steer traffic through a
   given path.  This technique works effectively as long as the

Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC2119.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on April 9, 2018.

Copyright Notice

   Copyright (c) 2017 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Grewal, et al.            Expires April 9, 2018                 [Page 1]

Internet-Draft             bgp-accept-own-nhop              October 2017


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Layer 2 physical network function in a service chain  . . . .   3
   3.  accept-own-nexthop community  . . . . . . . . . . . . . . . .   4
     3.1.  Route Acceptance  . . . . . . . . . . . . . . . . . . . .   4
     3.2.  Configuration Control . . . . . . . . . . . . . . . . . .   4
   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   4
   6.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   4
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   5
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   5
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   5

1.  Introduction

   This document discusses how multicast works with RMRs.

   The BGP ACCEPT_OWN Community Attribute standard [RFC7611] defined a
   technique to let the route reflector modify the RT list of a VPN
   route and redistribute it back to the originating PE.  This enables
   the route reflector to control how a route originated within one VRF
   at the PE is imported into other VRFs at the originating PE.
   However, the ACCEPT_OWN standard does not specify how the forwarding
   state next-hop for an accepted route is derived.  It seems that once
   the the source VRF is located, we'll find the original route for this
   prefix in this source VRF and use the next-hop information of the
   original route as the forwarding state for the received route.  The
   standard also mandates that the route received from the route
   reflector be orginated by a source VRF on the receiving router
   (Section 2.1 of BGP ACCEPT_OWN Community Attribute standard).

   This documnent proposes a new community BGP accept-own-nexthop whose
   usage means - 'accept a route with one's own next-hop (regardless of
   whether the route was originated by the PE).  Doing so, enables some
   new useful use cases.  The scope of this community does not mandate
   the route be originated by a source VRF on the receiving router as
   was the case in BGP ACCEPT_OWN community attribute.  Also, the usage
   of this community does not prescribe how the forwarding next-hop of
   such a a route is derived.




Grewal, et al.            Expires April 9, 2018                 [Page 2]

Internet-Draft             bgp-accept-own-nhop              October 2017


2.  Layer 2 physical network function in a service chain


                +--------------------------------------+
                | Layer 2 Physical network function    |
                +-------------^------------|-----------+
                              |            |
                              |            |
                              |            |
              +---------------|------------|---------------+
              |               |            |               |
              |          +----|----+  +----v----+          |
              |          | Service |  | Service |          |
              |       +-->  in-VRF |  | out-VRF ---+       |
              |       |  |         |  |         |  |       |
              |       |  +---------+  +---------+  |       |
              |       |                            |       |
              |  +----|----+                  +----v----+  |
              |  | Ingress |                  | Egress  |  |
        --------->  VRF    |                  |   VRF   --------->
              |  |         |                  |         |  |
              |  +---------+                  +---------+  |
              |                                            |
              |                Routing System              |
              +--------------------------------------------+

              Figure 1: A Layer 2 PNF as part of service chain

   For example, in the service chaining scenario - a PE (Fig. 1) could
   be advertising a static route, configured inside a VRF (service in-
   VRF), whose next-hop is the interface that a (transparent layer-2)
   service instance (viz., firewall, ant-virus system etc.) is connected
   to.  The prefix for this route is an address that also belongs to the
   same subnet as this interface's address.  The destination address
   will be in a different vrf (Service out-VRF) at the PE itself where
   the serviced traffic coming from the service will be received.

   PE will advertise this route with next-hop as itself and a label that
   identifies the interface that the service is connected to.

   A controller acting as an extended route reflector could now steer
   the traffic for a particular destination - for which the controller
   wants the traffic to be serviced - by sending a VPN route for that
   destination, with PE's own address as the next-hop and the above
   label.  The RT attached to such a route would allow it to be imported
   to the Ingress VRF.  Such a route will be resolved using the received
   VPN label to point to whatever next-hop information that is
   assosciated with this label.  A controller may create multiple such



Grewal, et al.            Expires April 9, 2018                 [Page 3]

Internet-Draft             bgp-accept-own-nhop              October 2017


   VRFs on the PE and following the above procedure for each service to
   construct a service chain by advertising route with different RTs for
   the ssame destination prefix with different labels, where each label
   is identify the interface towards that particular serivce.

3.  accept-own-nexthop community

   This memo defines accept-own-nexthop, a new well-known BGP community
   in the First Come First Servied [RFC5226] range, whose value as
   assigned by IANA is 0XFFF008.  Processing of accept-own-nexthop is
   controlled by configuration.  The functionality SHOULD default to
   being disabled, as further specifed in Section 3.2.

3.1.  Route Acceptance

   A router May accept a route whose NEXT_HOP value matches that of the
   receiving speaker if all of the following are true: * Processing of
   the accept-own-nexthop community is enabled by configuration.  * The
   route in question carries the accept-own-nexthop community.  * The
   route in question is targeted to one or more destination VRFs on the
   router (as determined by inspecting the Route Target(s)).

3.2.  Configuration Control

   accept-own-nexthop hanlding is controlled by configuration.  The
   default configuration action is to have this disabled.

4.  IANA Considerations

   IANA has assigned the value 0xFFFF0008 in the "BGP Well-known
   Communities" registry for the accept-own-nexthop community.

5.  Security Considerations

   accept-own-nexthop as described in this document permits a router's
   own route prefix to be advertised to a different VRF on that router.
   In this respect, such a route is similar to any other BGP route and
   shares the same set of security vulnerabilities and concerns.  This
   extension does not change the underlying security issues inherent in
   BGP VPN [RFC4364].

6.  Acknowledgements

   The authors would like to thank Minto Jeyananth, John Scudder and
   Jeff Haas for their valuable comments and suggestions.






Grewal, et al.            Expires April 9, 2018                 [Page 4]

Internet-Draft             bgp-accept-own-nhop              October 2017


7.  References

7.1.  Normative References

   [RFC4364]  Rosen, E. and Y. Rekhter, "BGP/MPLS IP Virtual Private
              Networks (VPNs)", RFC 4364, DOI 10.17487/RFC4364, February
              2006, <https://www.rfc-editor.org/info/rfc4364>.

   [RFC7611]  Uttaro, J., Mohapatra, P., Smith, D., Raszuk, R., and J.
              Scudder, "BGP ACCEPT_OWN Community Attribute", RFC 7611,
              DOI 10.17487/RFC7611, August 2015,
              <https://www.rfc-editor.org/info/rfc7611>.

7.2.  Informative References

   [RFC5226]  Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs", RFC 5226,
              DOI 10.17487/RFC5226, May 2008,
              <https://www.rfc-editor.org/info/rfc5226>.

Authors' Addresses

   Ashutosh Grewal
   Juniper Networks

   EMail: agrewal@juniper.net


   Nischal Seth
   Juniper Networks

   EMail: nsheth@juniper.net


   Kaliraj Vairavakkalai
   Juniper Networks

   EMail: kaliraj@juniper.net













Grewal, et al.            Expires April 9, 2018                 [Page 5]
